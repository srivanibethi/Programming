https://leetcode.com/problems/strobogrammatic-number/#/description
A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).

Write a function to determine if a number is strobogrammatic. The number is represented as a string.

For example, the numbers "69", "88", and "818" are all strobogrammatic.



class Solution(object):
    def isStrobogrammatic(self, nums):
        """
        :type num: str
        :rtype: bool
        """
        
        first = 0
        last = len(nums)-1
        if len(nums) %2 == 1:
            res = nums[len(nums)/2] in ["1", "0", "8"]
        else:
            res = True
        while first<last and res:
            if nums[first] == "6":
                res = nums[last] == "9"
            elif nums[first] == "9":
                res = nums[last] == "6"
            else:
                res = nums[first] == nums[last] and nums[first] in ["1", "0", "8"]
            first += 1
            last -=1
        return res
        
