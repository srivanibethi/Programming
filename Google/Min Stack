https://leetcode.com/problems/min-stack/description/

class MinStack(object):

    def __init__(self):
        """
        initialize your data structure here.
        """
        self.arr = []
        self.counter = -1      

    def push(self, x):
        """
        :type x: int
        :rtype: void
        """
        if self.counter<0:
            self.arr.append((x, x))
        else:
            min_sofar = min(self.arr[self.counter][1], x)
            self.arr.append((x, min_sofar))
        self.counter +=1
        

    def pop(self):
        """
        :rtype: void
        """
        if self.counter >=0:
            self.arr.pop()
            self.counter -=1   

    def top(self):
        """
        :rtype: int
        """
        return self.arr[-1][0] if self.counter >=0 else None     

    def getMin(self):
        """
        :rtype: int
        """
        return self.arr[-1][1] if self.counter >=0 else None 
        


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(x)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()
