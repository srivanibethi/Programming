https://leetcode.com/problems/unique-word-abbreviation/
1) [“dog”]; isUnique(“dig”);   
//False, because “dig” has the same abbreviation with “dog" and “dog” is already in the dictionary. It’s not unique.

2) [“dog”, “dog"]; isUnique(“dog”);  
//True, because “dog” is the only word that has “d1g” abbreviation.

3) [“dog”, “dig”]; isUnique(“dog”);   

class ValidWordAbbr(object):

    def __init__(self, dictionary):
        """
        :type dictionary: List[str]
        Make a dictionary of the abbrevation: set(words that match)
        """
        self.dict = collections.defaultdict(set)
        for word in dictionary:
            abbrev = word
            if len(word) > 2:
                word = word[0] + str(len(word)-2) + word[-1]
            self.dict[word].add(abbrev)      
            
            

    def isUnique(self, word):
        """
        :type word: str
        :rtype: bool
        Check if the abbrevation is in dict and if check if the word is the only word in the value
        """       
        res = word
        if len(word) > 2:
            word = word[0] + str(len(word)-2) + word[-1]
    
    
        if word in self.dict:
            if len(self.dict[word]) > 1 or res != list(self.dict[word])[0]:
                return False
            else:
                return True   
        elif res not in self.dict:
            return True
        else:
            return False   
