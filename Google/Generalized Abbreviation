https://leetcode.com/problems/generalized-abbreviation/tabs/description

class Solution(object):
    def generateAbbreviations(self, nums):
        """
        :type word: str
        :rtype: List[str]
        """
        res = []
        for i in range(2**len(nums)):
            sub_arr = []
            count = 0
            for j in range(len(nums)):
                if self.bit_set(i, j):
                    if count:
                        sub_arr.append(str(count))
                        count = 0
                    sub_arr.append(nums[j])
                else:
                    count +=1
            if count:
                sub_arr.append(str(count))
                count = 0
            res.append("".join(sub_arr))
        return res

    def bit_set(self, i, j):
        return i & (1<<j)
